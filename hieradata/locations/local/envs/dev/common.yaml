---

jenkins::plugin_hash:
  git: {}
  git-client: {}
  javadoc: {}
  packer: {}
  greenballs: {}
  promoted-builds: {}
  scm-api: {}
  throttle-concurrents: {}
  xvfb: {}
  build-flow-plugin: {}
  swarm: {}
  ssh-agent: {}
  rbenv: {}
  ruby-runtime: {}
  ansicolor: {}
  flexible-publish: {}
  envinject: {}
  token-macro: {}
  text-finder: {}
  ansicolor: {}
  build-pipeline-plugin: {}
  parameterized-trigger: {}
  nodelabelparameter: {}
  jquery: {}
  job-dsl: {}


jenkins_credentials:
  jenkins:
    password: ''
    description: jenkins
    private_key_or_path: '/var/lib/jenkins/.ssh/id_rsa'


# Jenkins Jobs Builder
jenkins_job_builder::jobs:


  puppet_pipeline-flow:
    delay: 10
    config:
      - job:
          name: puppet_pipeline-flow
          description: "Build Flow for Puppet Pipeline"
          project-type: flow
          dsl: |
            build("create_puppet_pipeline_view")
            build("puppet_pipeline-spec-tests")

  puppet_pipeline-spec-tests:
    delay: 10
    config:
      - job:
          name: puppet_pipeline-spec-tests
          description: "Runs Puppet spec tests"
          project-type: freestyle
          scm:
            - git:
                wipe-workspace: False
                url: 'https://github.com/madAndroid/puppet_pipeline_demo'
                git-config-name: 'Andrew Stangl'
                git-config-email: 'andrew@droid.com'
                branches:
                  - '*/master'
          parameters:
            - label:
                name: node
                default: docker
          wrappers:
            - rbenv:
                ruby-version: 2.0.0-p353
                preinstall-gem-list: "bundler,rake"
            - ansicolor:
                colormap: vga
          builders:
            - shell: |
                #!/bin/bash
                export PATH=/usr/local/bin:/var/lib/jenkins/bin:$PATH
                bundle install
                bundle exec rake test

  puppet_pipeline-acceptance-tests:
    delay: 10
    config:
      - job:
          name: puppet_pipeline-acceptance-tests
          description: "Runs Puppet acceptance tests"
          project-type: freestyle
          scm:
            - git:
                wipe-workspace: False
                url: 'https://github.com/madAndroid/puppet_pipeline_demo'
                git-config-name: 'Andrew Stangl'
                git-config-email: 'andrew@droid.com'
                branches:
                  - '*/master'
          triggers:
            - reverse:
                  jobs: 'puppet_pipeline-spec-tests'
                  result: 'success'
          parameters:
            - label:
                name: node
                default: docker
          wrappers:
            - rbenv:
                ruby-version: 2.0.0-p353
                preinstall-gem-list: "bundler,rake"
            - ansicolor:
                colormap: vga
          builders:
            - shell: |
                #!/bin/bash
                export PATH=/usr/local/bin:/var/lib/jenkins/bin:$PATH
                bundle install
                BEAKER_set=centos7 bundle exec rake acceptance

  puppet_pipeline:
    delay: 10
    config:
      - job:
          name: puppet_pipeline
          description: "Builds Puppet package"
          project-type: freestyle
          scm:
            - git:
                wipe-workspace: False
                url: 'https://github.com/madAndroid/puppet_pipeline_demo'
                git-config-name: 'Andrew Stangl'
                git-config-email: 'andrew@droid.com'
                branches:
                  - '*/master'
          triggers:
            - reverse:
                  jobs: 'puppet_pipeline-acceptance-tests'
                  result: 'success'
          parameters:
            - label:
                name: node
                default: docker
          wrappers:
            - rbenv:
                ruby-version: 2.0.0-p353
                preinstall-gem-list: "bundler,rake"
            - ansicolor:
                colormap: vga
          builders:
            - shell: |
                echo "Started running at: $(date '+%Y-%m-%d %H:%M:%S %:z')"
                find -maxdepth 1 -type f -iname "$JOB_NAME-*.rpm" -delete
                /usr/local/bin/librarian-puppet install --verbose
                /usr/local/bin/fpm -s dir -t rpm -n ${JOB_NAME} -v ${BUILD_NUMBER} -a noarch --epoch 0 --iteration 1droid -m support@stangl.com -x .tmp* -x puppet/.gitignore -x puppet/.librarian* -x */*/.git* --prefix /etc .
                sudo cp *rpm /opt/repo/
                echo "Finished running at: $(date '+%Y-%m-%d %H:%M:%S %:z')"
          properties:
            - promoted-build:
                names:
                  - '1. DEV Deployment'

  puppet_pipeline-deploy:
    delay: 10
    config:
      - job:
          name: puppet_pipeline-deploy
          description: "Builds Puppet package"
          project-type: freestyle
          scm:
            - git:
                wipe-workspace: False
                url: 'https://github.com/madAndroid/puppet_pipeline_demo'
                git-config-name: 'Andrew Stangl'
                git-config-email: 'andrew@droid.com'
                branches:
                  - '*/master'
          triggers:
            - reverse:
                  jobs: 'puppet_pipeline'
                  result: 'success'
          parameters:
            - label:
                name: node
                default: webapp
          builders:
            - shell: |
                echo "Started running at: $(date '+%Y-%m-%d %H:%M:%S %:z')"
                sudo yum install -y puppet_pipeline
                echo "Finished running at: $(date '+%Y-%m-%d %H:%M:%S %:z')"
          properties:
            - promoted-build:
                names:
                  - '1. DEV Deployment'

  create-puppet_pipeline-view:
    delay: 10
    config:
      - job:
          name: create_puppet_pipeline_view
          description: "Build Flow for Puppet Pipeline"
          project-type: freestyle
          builders:
            - dsl:
                script-text: |
                    buildPipelineView('puppet_pipeline') {
                        filterBuildQueue()
                        filterExecutors()
                        title('Puppet Project CI Pipeline')
                        displayedBuilds(5)
                        selectedJob('puppet_pipeline-spec-tests')
                        alwaysAllowManualTrigger()
                        showPipelineParameters()
                        refreshFrequency(60)
                    }
                ignore-existing: "false"

